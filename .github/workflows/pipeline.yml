name: Build and Publish Frontend Image
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Install Pylint
        run: |
          pip install pylint
      
      - name: Run Pylint
        run: |
          pylint --fail-under=8 *.py

  bandit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Install Bandit
        run: |
          pip install bandit
      
      - name: Run Bandit Security Scan
        run: |
          bandit -r . -lll -iii || exit 1
          echo "Bandit security scan passed with no high-severity issues"

  dockerfile-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Hadolint for Dockerfile scanning
        run: |
          wget -O /tmp/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          chmod +x /tmp/hadolint
          sudo mv /tmp/hadolint /usr/local/bin/
      
      - name: Scan Dockerfile
        run: |
          hadolint --failure-threshold error Dockerfile

  build-and-push:
    needs: [pylint, bandit, dockerfile-scan]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10

      - name: Build Docker image locally
        run: |
          docker build -t local-image:${{ github.sha }} .
          echo "Built image: local-image:${{ github.sha }}"

      - name: Run container for smoke test
        run: |
          docker run -d -p 8080:8080 --name app-container local-image:${{ github.sha }}
          sleep 10

      - name: Test app reachability
        run: |
          # Check if the application is responding
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080)
          echo "HTTP Status: $HTTP_STATUS"
          
          if [[ "$HTTP_STATUS" -ge 200 && "$HTTP_STATUS" -lt 400 ]]; then
            echo "✅ Application is reachable and returned a success status code: $HTTP_STATUS"
          else
            echo "❌ Application is not reachable or returned an error status code: $HTTP_STATUS"
            exit 1
          fi
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          